package com.itheima.level2_02;
/*
 
 
 
 分析: 
	1.要完成上面的验证必须要一个异常体系,可以使用现有的,也可以自定义异常体系;我们这里自定义异常体系,注意异常体系中的所有异常都是编译异常;
	2. 定义用于测试的父类和子类,然后逐条验证上面的说法是否正确
	3. 把报编译异常的代码可以使用注释,注释起来,上面写明验证的知识点.
	
  异常的继承体系
					  	   									Exception
					  	   										|
					  	--------------------PainException(疼痛异常)------------ 
						|										  			|
		 	ToothPainExcetion(牙痛异常)								  TonguePainException(舌头疼异常)
            |				        |
BigToothPainExcption(大牙痛)  FrontToothPainExcetion(门牙疼)  
 
 
 测试类继承关系
 Father
    |
 Son
 



步骤:
	1.构建异常体系
		
		a)定义PainExecption(疼异常)类继承Exception
			i.提供空参和有参构造,注意有参构造必须调用父类的有参构造
		b)定义ToothPainException(牙疼异常)类和TonguePainException(舌头疼异常)类继承PainException
			i.提供空参和有参构造,注意有参构造必须调用父类的有参构造
		c)定义BigToothPainException(大牙疼),FrontToothPainExcption(门牙疼)继承ToothPainException(牙痛)
			i.提供空参和有参构造,注意有参构造必须调用父类的有参构造
	2.定义用于测试的父类Father
		a)提供一个吃(eat)的成员方法,抛出牙疼异常
			i.输出吃到一个石子
			ii.抛出一个牙疼的异常
		b)提供一个喝(drink)的成员方法不抛出异常
			i.输出: 喝什么都没有问题
	3.定义用于测试的子类Son,继承Father
		a)验证: 重写方法不能抛出与父类平级的其他异常
			i.重写父类的eat方法,抛出与牙疼平级舌头疼异常,编译报错,说明这句话是对的
			ii.注释掉这个重写的方法,验证下一个
		b)验证: 重写方法不能抛出比父类高级的异常
			i.重写父类的eat方法,抛出比牙疼高级疼异常,编译报错,说明这句话是对的
		c)验证:重写方法: 可以抛出和父类同样的异常
			i.重写父类的eat方法,也抛出牙疼异常,编译通过,说明这句话是对的
		d)验证:重写方法: 可以抛出父类抛出异常的子类异常.
			i.重写父类的eat方法,抛出牙疼异常的子类异常大牙疼异常,编译通过,说明这句话是对的
		e)验证: 重写方法: 可以抛出多个 "父类抛出异常的子类异常".
			i.重写父类的eat方法,抛出牙疼异常的两个子类异常,大牙疼和门牙疼,编译通过,说明这句是对的
		f)验证:父类不抛出异常,子类也不能抛出异常(编译时异常)
			i.重写父类的drink方法,抛出(牙疼,舌头疼,门牙疼)任意一个编译异常,编译都报错,说明这句话是对的
		g)验证: 如果子类内部抛出了异常(或调用抛出异常的方法)只能自己处理,不允许向外抛.
			i.重写父类的drink方法
			ii.输出喝到了100度的水
			iii.抛出舌头疼异常
			iv.这个时候编译报错
			v.把上面两句代码放到try代码块中
			vi.在catch代码块中打印异常信息
			vii.编译通过.
 */
public class Test14 {

}
